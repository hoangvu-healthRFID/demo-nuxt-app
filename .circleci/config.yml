version: 2.1
orbs:
  node: circleci/node@4.1.0
  aws-ecr: circleci/aws-ecr@6.15.3
  aws-ecs: circleci/aws-ecs@2.0.0


commands:
  install_packages:
    steps:
      - restore_cache:
          key: dependency-cache-{{ checksum "package-lock.json" }}
      - run:
          name: install-packages
          command: npm install
      - save_cache:
          key: dependency-cache-{{ checksum "package-lock.json" }}
          paths:
            - ./node_modules
  
  test:
    steps:
      - run:
          name: run jest test
          command: npm run test
      - store_artifacts:
          path: test-report.html         
      - store_test_results:
          path: test-report.html

  build:
    steps:
      -run:
        name: test build
        command: npm run build
      - store_artifacts:
            path: ~/dist
            destination: '/build'


jobs:
  test_and_build:
    executor: node/default
    steps:
      - checkout
      - install_packages
      - test
      - build

  deploy_ecr: 
    executor: aws-ecr/default
    steps:
      - checkout
      - run:
          name: get tag number
          command: |
            tag=""
            file="./config/config.js"
            while IFS= read line
            do
            if [[ $line == *version* ]]
            then
            echo $line
            length=${#line}-14
            tag=v${line:12:${length}}
            echo $tag
            fi
            done <"$file"
            echo "export TAG_NUMBER=$tag-$CIRCLE_BRANCH" >> $BASH_ENV
            source $BASH_ENV
      - aws-ecr/build-and-push-image:
          checkout: false
          account-url: $AWS_ECR_ACCOUNT_URL
          aws-access-key-id: $AWS_ACCESS_KEY_ID
          aws-secret-access-key: $AWS_SECRET_ACCESS_KEY
          create-repo: true
          dockerfile: Dockerfile
          path: .
          region: $AWS_REGION
          repo: circleci-ecr-orb-demo
          tag: $TAG_NUMBER
  
  update_service:
    executor: aws-ecs/default
    steps:
      - aws-ecs/deploy-service-update:
          aws-region: $AWS_REGION          
          aws-access-key-id: $AWS_ACCESS_KEY_ID          
          aws-secret-access-key: $AWS_SECRET_ACCESS_KEY
          family: $ECS_FAMILY
          cluster-name: $ECS_CLUSTER
          service-name: $ECS_SERVICE_NAME
          container-image-name-updates: 'container=$ECS_CONTAINER_NAME,tag=$TAG_NUMBER'

workflows:
  deploy_ecr:
    jobs:
      - test_and_build
      - deploy_ecr:
          require:
            - test_and_build
      - update_service:
          require:
            - deploy_ecr
